import { ControllerChangeEvent } from 'midi-writer-js/browser/types/midi-events/controller-change-event';
import { CopyrightEvent } from 'midi-writer-js/browser/types/meta-events/copyright-event';
import { CuePointEvent } from 'midi-writer-js/browser/types/meta-events/cue-point-event';
import { EndTrackEvent } from 'midi-writer-js/browser/types/meta-events/end-track-event';
import { InstrumentNameEvent } from 'midi-writer-js/browser/types/meta-events/instrument-name-event';
import { KeySignatureEvent } from 'midi-writer-js/browser/types/meta-events/key-signature-event';
import { LyricEvent } from 'midi-writer-js/browser/types/meta-events/lyric-event';
import { MarkerEvent } from 'midi-writer-js/browser/types/meta-events/marker-event';
import { NoteOnEvent } from 'midi-writer-js/browser/types/midi-events/note-on-event';
import { NoteOffEvent } from 'midi-writer-js/browser/types/midi-events/note-off-event';
import { NoteEvent } from 'midi-writer-js/browser/types/midi-events/note-event';
import { PitchBendEvent } from 'midi-writer-js/browser/types/midi-events/pitch-bend-event';
import { ProgramChangeEvent } from 'midi-writer-js/browser/types/midi-events/program-change-event';
import { TempoEvent } from 'midi-writer-js/browser/types/meta-events/tempo-event';
import { TextEvent } from 'midi-writer-js/browser/types/meta-events/text-event';
import { TimeSignatureEvent } from 'midi-writer-js/browser/types/meta-events/time-signature-event';
import { Track } from 'midi-writer-js/browser/types/chunks/track';
import { TrackNameEvent } from 'midi-writer-js/browser/types/meta-events/track-name-event';
import { Utils } from 'midi-writer-js/browser/types/utils';
import { VexFlow } from 'midi-writer-js/browser/types/vexflow';
import { Writer } from 'midi-writer-js/browser/types/writer';
declare const _default: {
    Constants: {
        VERSION: string;
        HEADER_CHUNK_TYPE: number[];
        HEADER_CHUNK_LENGTH: number[];
        HEADER_CHUNK_FORMAT0: number[];
        HEADER_CHUNK_FORMAT1: number[];
        HEADER_CHUNK_DIVISION: number[];
        TRACK_CHUNK_TYPE: number[];
        META_EVENT_ID: number;
        META_SMTPE_OFFSET: number;
    };
    ControllerChangeEvent: typeof ControllerChangeEvent;
    CopyrightEvent: typeof CopyrightEvent;
    CuePointEvent: typeof CuePointEvent;
    EndTrackEvent: typeof EndTrackEvent;
    InstrumentNameEvent: typeof InstrumentNameEvent;
    KeySignatureEvent: typeof KeySignatureEvent;
    LyricEvent: typeof LyricEvent;
    MarkerEvent: typeof MarkerEvent;
    NoteOnEvent: typeof NoteOnEvent;
    NoteOffEvent: typeof NoteOffEvent;
    NoteEvent: typeof NoteEvent;
    PitchBendEvent: typeof PitchBendEvent;
    ProgramChangeEvent: typeof ProgramChangeEvent;
    TempoEvent: typeof TempoEvent;
    TextEvent: typeof TextEvent;
    TimeSignatureEvent: typeof TimeSignatureEvent;
    Track: typeof Track;
    TrackNameEvent: typeof TrackNameEvent;
    Utils: typeof Utils;
    VexFlow: typeof VexFlow;
    Writer: typeof Writer;
};
export default _default;
